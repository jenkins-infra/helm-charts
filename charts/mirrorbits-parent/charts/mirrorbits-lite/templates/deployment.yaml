apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "mirrorbits-lite.fullname" . }}
  labels:
{{ include "mirrorbits-lite.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "mirrorbits-lite.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "mirrorbits-lite.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        checksum/config: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum | trunc 63 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "mirrorbits-lite.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: conf
              mountPath: /etc/mirrorbits
            {{ if $.Values.repository.persistentVolumeClaim.enabled -}}
            - name: binary
              mountPath: /srv/repo
            {{- end }}
            - name: geoipdata
              mountPath: /usr/share/GeoIP
          livenessProbe:
            httpGet:
              path: /?mirrorstats
              port: 8080
          readinessProbe:
            httpGet:
              path: /?mirrorstats
              port: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: geoipupdate
          image: "{{ .Values.geoipupdate.image.repository }}:{{ .Values.geoipupdate.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: geoipdata
              mountPath: /usr/share/GeoIP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GEOIPUPDATE_EDITION_IDS
              value: {{ .Values.geoipupdate.editions }}
            - name: GEOIPUPDATE_FREQUENCY
              value: {{ .Values.geoipupdate.update_frequency | quote }}
          envFrom:
          - secretRef:
              name: {{ include "mirrorbits-lite.fullname" . }}-geoipupdate
      initContainers:
        # we need to ensure the geoip data is in place before mirrorbits starts
        - name: geoipupdate-init
          image: "{{ .Values.geoipupdate.image.repository }}:{{ .Values.geoipupdate.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: geoipdata
              mountPath: /usr/share/GeoIP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: GEOIPUPDATE_EDITION_IDS
              value: {{ .Values.geoipupdate.editions }}
          envFrom:
          - secretRef:
              name: {{ include "mirrorbits-lite.fullname" . }}-geoipupdate

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: conf
          secret:
            secretName: {{ include "mirrorbits-lite.fullname" . }}
            items:
              - key: mirrorbits.conf
                path: mirrorbits.conf
        - name: geoipdata
          emptyDir: {}
        {{ if $.Values.repository.persistentVolumeClaim.enabled -}}
        - name: binary
          persistentVolumeClaim:
            claimName: {{ .Values.repository.name | default (printf "%s-binary" (include "mirrorbits-lite.fullname" .)) }}
        {{- end -}}
