suite: default tests
templates:
  - configmap.yaml
  - deployment.yaml
  - ingress.yaml
  - persistentVolume.yaml
  - persistentVolumeClaim.yaml
  - secret.yaml # Direct dependency of deployment.yaml
  - service.yaml
tests:
  - it: should not create any ingress by default
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should create a service with default values
    template: service.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "httpd"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
  - it: should create a Deployment with default values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/name"]
          value: "httpd"
      - equal:
          path: spec.template.metadata.labels["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
      - equal:
          path: "spec.template.spec.containers[*].imagePullPolicy"
          value: IfNotPresent
      - equal:
          path: spec.template.spec.volumes[0].name
          value: conf
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: conf
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].readOnly
          value: true
      # HTML volume is an emptydir by default
      - equal:
          path: spec.template.spec.volumes[1].name
          value: html
      - equal:
          path: spec.template.spec.volumes[1].emptyDir
          value: {}
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].name
          value: html
      - notExists:
          path: spec.template.spec.containers[0].volumeMounts[1].subPath
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].readOnly
          value: true
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[1].mountPath
          value: /usr/local/apache2/htdocs
      - notExists:
          path: spec.template.metadata.annotations
  - it: should not define any persistent volume
    template: persistentVolume.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should not define any PV claim
    template: persistentVolumeClaim.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should create a config map with default tuning values
    template: configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - matchRegex:
          path: data["httpd.conf"]
          pattern: "ServerLimit.*25"
      - matchRegex:
          path: data["httpd.conf"]
          pattern: "MaxRequestWorkers.*400"
