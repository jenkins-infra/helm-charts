suite: Test with custom values
templates:
  - deployment.yaml
  - zh-deployment.yaml
  - configmap.yaml
  - zh-configmap.yaml
  - pdb.yaml
  - zh-pdb.yaml
set:
  htmlVolume:
    azureFile:
      secretName: jenkinsio
      shareName: jenkinsio
      readOnly: true
  affinity:
    jenkinsio:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - jenkinsio
            topologyKey: "kubernetes.io/hostname"
    jenkinsio-zh:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: "app.kubernetes.io/name"
                  operator: In
                  values:
                    - jenkinsio-zh
            topologyKey: "kubernetes.io/hostname"
tests:
  - it: should create a deployment for jenkins.io with specified custom values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-jenkinsio
      - equal:
          path: spec.template.spec.volumes[0].name
          value: html
      - notExists:
          path: spec.template.spec.volumes[0].emptyDir
      - equal:
          path: spec.template.spec.volumes[0].azureFile.shareName
          value: jenkinsio
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].values[0]
          value: jenkinsio
  - it: should create a deployment for zh.jenkins.io with specified custom values
    template: zh-deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: metadata.name
          value: RELEASE-NAME-jenkinsio-zh
      - equal:
          path: spec.template.spec.affinity.podAntiAffinity.requiredDuringSchedulingIgnoredDuringExecution[0].labelSelector.matchExpressions[0].values[0]
          value: jenkinsio-zh
  - it: should ensure the pdb has correct spec for jenkinsio
    template: pdb.yaml
    set:
      replicaCount: 2
      poddisruptionbudget.jenkinsio.minAvailable: 2
      poddisruptionbudget.jenkinsio.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "jenkinsio"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: jenkinsio
  - it: should ensure the pdb has correct spec for jenkinsio-zh
    template: zh-pdb.yaml
    set:
      replicaCount: 2
      poddisruptionbudget.jenkinsiozh.minAvailable: 3
      poddisruptionbudget.jenkinsiozh.maxUnavailable: 4
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 3
      - equal:
          path: spec.maxUnavailable
          value: 4
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "jenkinsio-zh"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: jenkinsio
  - it: should not deploy jenkinsio if disabled
    templates:
      - deployment.yaml
    set:
      jenkinsioEnabled: false
    asserts:
      - hasDocuments:
          count: 0
  - it: should not deploy jenkinsio-zh if disabled
    templates:
      - zh-deployment.yaml
    set:
      zhJenkinsioEnabled: false
    asserts:
      - hasDocuments:
          count: 0
