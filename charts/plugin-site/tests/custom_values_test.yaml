suite: Test with custom values
templates:
  - deployment-frontend.yaml
  - deployment-backend.yaml
  - ingress.yaml
  - pdb-frontend.yaml
  - nginx-configmap.yaml # Direct dependency of deployment-frontend.yaml
  - secret.yaml # Direct dependency of deployment-backend.yaml
values:
  - values/custom.yaml
tests:
  - it: should create a custom ingress when ingress.enabled is true
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
  - it: should create a custom backend deployment
    template: deployment-backend.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.metadata.annotations["ad.datadoghq.com/plugin-site-backend.logs"]
          value: |
            [
              {"source":"java","service":"RELEASE-NAME"}
            ]
  - it: should create a custom frontend deployment
    template: deployment-frontend.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.volumes[0].name
          value: html
      - equal:
          path: spec.template.spec.volumes[0].hostPath
          value: /host
      - equal:
          path: spec.template.spec.containers[0].resources.limits.cpu
          value: 300ms
      - equal:
          path: spec.template.metadata.annotations["ad.datadoghq.com/plugin-site-frontend.logs"]
          value: |
            [
              {"source":"nginx","service":"RELEASE-NAME"}
            ]
  - it: should create a customized PDB with the provided spec
    template: pdb-frontend.yaml
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "plugin-site-frontend"
