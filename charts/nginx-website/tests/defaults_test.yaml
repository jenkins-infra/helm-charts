---
suite: default tests
templates:
  - pdb.yaml
  - deployment.yaml
  - nginx-configmap.yaml
tests:
  - it: should not generate any pdb with default values
    template: pdb.yaml
    asserts:
      - hasDocuments:
          count: 0
  - it: should generate a deployment with the default values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - notExists:
          path: spec.affinity
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: nginx-website
      - equal:
          path: metadata.labels["app.kubernetes.io/managed-by"]
          value: Helm
      - equal:
          path: spec.template.spec.volumes[0].name
          value: html
      - equal:
          path: spec.template.spec.volumes[0].emptyDir
          value: {}
      - notExists:
          path: spec.template.spec.containers[0].resources
      - notExists:
          path: spec.template.metadata.annotations
      - equal:
          path: spec.template.spec.volumes[0].name
          value: html
      - isNullOrEmpty:
          path: spec.template.spec.volumes[0].emptyDir
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: html
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].readOnly
          value: true
      - notExists:
          path: spec.template.spec.containers[0].volumeMounts[0].subPath
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /usr/share/nginx/html
  - it: should create a default nginx configuration
    template: nginx-configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: RELEASE-NAME-nginx-website
      - matchRegex:
          path: data["default.conf"]
          pattern: 'listen       80;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'server_name  localhost;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'root   /usr/share/nginx/html;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'index  index.html index.htm;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'autoindex on;'
      - notMatchRegex:
          path: data["default.conf"]
          pattern: 'try_files \$uri /index.html;'
