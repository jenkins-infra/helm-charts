---
suite: Test with custom values
templates:
  - pdb.yaml
  - nginx-configmap.yaml
  - deployment.yaml
values:
  - values/custom.yaml
tests:
  - it: should ensure the pdb has correct spec
    template: pdb.yaml
    set:
      replicaCount: 2
      podDisruptionBudget.minAvailable: 2
      podDisruptionBudget.maxUnavailable: 1
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "nginx-website"
  - it: should create a custom nginx configuration
    template: nginx-configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: RELEASE-NAME-nginx-website
      - matchRegex:
          path: data["default.conf"]
          pattern: 'listen       8080;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'root   /custom;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'index  custom.html;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'autoindex off;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'try_files \$uri /index.html;'
  - it: should generate a deployment with the custom values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.metadata.annotations["ad.datadoghq.com/web.logs"]
          value: |
            [
              {"source":"nginx","service":"RELEASE-NAME"}
            ]
      - equal:
          path: spec.template.spec.volumes[0].name
          value: html
      - equal:
          path: spec.template.spec.volumes[0].persistentVolumeClaim.claimName
          value: my-pvc
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].name
          value: html
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].readOnly
          value: true
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].subPath
          value: ./html/
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[0].mountPath
          value: /usr/share/nginx/html
