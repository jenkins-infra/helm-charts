---
suite: Test with custom values
templates:
  - pdb.yaml
  - nginx-configmap.yaml
set:
  nginx:
    serverName: _
    slashLocation:
      root: /custom
      index: custom.html
      autoindex: "off"
      tryFiles: $uri /index.html
    redirections:
      - location: /alocation
        returnedCode: 301
        destination: https://awebsite.example/apath/
      - location: /anotherlocation
        returnedCode: 302
        destination: https://anotherwebsite.example/anotherpath/
  service:
    port: 8080
tests:
  - it: should ensure the pdb has correct spec
    template: pdb.yaml
    set:
      replicaCount: 2
      podDisruptionBudget.minAvailable: 2
      podDisruptionBudget.maxUnavailable: 1
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "nginx-website"
  - it: should create a custom nginx configuration
    template: nginx-configmap.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: ConfigMap
      - equal:
          path: metadata.name
          value: RELEASE-NAME-nginx-website
      - matchRegex:
          path: data["default.conf"]
          pattern: 'listen       8080;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'root   /custom;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'index  custom.html;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'autoindex off;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'try_files \$uri /index.html;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'location /alocation {'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'return 301 https://awebsite.example/apath/\$request_uri;'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'location /anotherlocation {'
      - matchRegex:
          path: data["default.conf"]
          pattern: 'return 302 https://anotherwebsite.example/anotherpath/\$request_uri;'
