suite: multibranch jobs tests
templates:
  - jcasc-jobs-config.yaml
tests:
  - it: should generate a multibranch job with minimum defaults
    values:
      - fixtures/multibranch_default.yaml
    asserts:
      - equal:
          path: data["jobs-definition.yaml"]
          value: |
            jobs:
              - script: |

                  multibranchPipelineJob('default-job') {
                    triggers {
                      periodicFolderTrigger {
                        interval('2h')
                      }
                    }

                    branchSources {
                      branchSource {
                        source {
                          github {
                            id('default-job')
                            credentialsId('github-app-infra')
                            configuredByUrl(true)
                            repositoryUrl('https://github.com/jenkins-infra/default-job')
                            repoOwner('jenkins-infra')
                            repository('default-job')
                            traits {
                              gitHubNotificationContextTrait {
                                contextLabel('jenkins/localhost/default-job')
                                typeSuffix(true)
                              }
                              gitHubSCMSourceStatusChecksTrait {
                                // Note: changing this name might have impact on github branch protections if they specify status names
                                name('jenkins')
                                skip(true)
                                skipProgressUpdates(true)
                                // If this option is checked, the notifications sent by the GitHub Branch Source Plugin will be disabled.
                                skipNotifications(false)
                                // Default value: false. Warning: risk of secret leak in console if the build fails
                                // Please note that it only disable the detailed logs. If you really want no logs, then use "skip(false)' instead
                                suppressLogs(true)
                                unstableBuildNeutral(false)
                              }
                              gitHubBranchDiscovery {
                                strategyId(1) // 1-only branches that are not pull requests
                              }
                              gitHubPullRequestDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                              }
                              gitHubForkDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                                trust {
                                  gitHubTrustPermissions()
                                }
                              }
                              pruneStaleBranchTrait()
                              gitHubTagDiscovery()
                              pullRequestLabelsBlackListFilterTrait {
                                labels('on-hold,ci-skip,skip-ci')
                              }
                              // Select branches and tags to build based on these filters
                              headWildcardFilterWithPR {
                                includes('main master PR-*') // only branches listed here
                                excludes('')
                                tagIncludes('*')
                                tagExcludes('')
                              }
                            }
                          }
                          buildStrategies {
                            buildAnyBranches {
                              strategies {
                                skipInitialBuildOnFirstBranchIndexing()
                                buildChangeRequests {
                                  ignoreTargetOnlyChanges(true)
                                  ignoreUntrustedChanges(true)
                                }
                                buildRegularBranches()
                                buildTags {
                                  atLeastDays('-1')
                                  atMostDays('3')
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    factory {
                      workflowBranchProjectFactory {
                        scriptPath('Jenkinsfile_k8s')
                      }
                    }
                    orphanedItemStrategy {
                      defaultOrphanedItemStrategy {
                        pruneDeadBranches(true)
                        daysToKeepStr("")
                        numToKeepStr("")
                        abortBuilds(true)
                      }
                    }
                    displayName('Default Job')
                    description('Default Job')
                  }
  - it: should generate a multibranch job with custom name, description and explicit kind
    values:
      - fixtures/multibranch_custom.yaml
    asserts:
      - equal:
          path: data["jobs-definition.yaml"]
          value: |
            jobs:
              - script: |

                  multibranchPipelineJob('joba') {
                    triggers {
                      periodicFolderTrigger {
                        interval('2h')
                      }
                    }

                    branchSources {
                      branchSource {
                        source {
                          github {
                            id('joba')
                            credentialsId('github-app-infra')
                            configuredByUrl(true)
                            repositoryUrl('https://github.com/jenkins-infra/joba')
                            repoOwner('jenkins-infra')
                            repository('joba')
                            traits {
                              gitHubNotificationContextTrait {
                                contextLabel('jenkins/jenkins.company.com/joba')
                                typeSuffix(true)
                              }
                              gitHubSCMSourceStatusChecksTrait {
                                // Note: changing this name might have impact on github branch protections if they specify status names
                                name('jenkins')
                                skip(true)
                                skipProgressUpdates(true)
                                // If this option is checked, the notifications sent by the GitHub Branch Source Plugin will be disabled.
                                skipNotifications(false)
                                // Default value: false. Warning: risk of secret leak in console if the build fails
                                // Please note that it only disable the detailed logs. If you really want no logs, then use "skip(false)' instead
                                suppressLogs(true)
                                unstableBuildNeutral(false)
                              }
                              gitHubBranchDiscovery {
                                strategyId(1) // 1-only branches that are not pull requests
                              }
                              gitHubPullRequestDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                              }
                              gitHubForkDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                                trust {
                                  gitHubTrustPermissions()
                                }
                              }
                              pruneStaleBranchTrait()
                              gitHubTagDiscovery()
                              pullRequestLabelsBlackListFilterTrait {
                                labels('on-hold,ci-skip,skip-ci')
                              }
                              // Select branches and tags to build based on these filters
                              headWildcardFilterWithPR {
                                includes('main master PR-*') // only branches listed here
                                excludes('')
                                tagIncludes('*')
                                tagExcludes('')
                              }
                            }
                          }
                          buildStrategies {
                            buildAnyBranches {
                              strategies {
                                skipInitialBuildOnFirstBranchIndexing()
                                buildChangeRequests {
                                  ignoreTargetOnlyChanges(true)
                                  ignoreUntrustedChanges(true)
                                }
                                buildRegularBranches()
                                buildTags {
                                  atLeastDays('-1')
                                  atMostDays('3')
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    factory {
                      workflowBranchProjectFactory {
                        scriptPath('Jenkinsfile_k8s')
                      }
                    }
                    orphanedItemStrategy {
                      defaultOrphanedItemStrategy {
                        pruneDeadBranches(true)
                        daysToKeepStr("")
                        numToKeepStr("")
                        abortBuilds(true)
                      }
                    }
                    displayName('Job A')
                    description('Job A for team A')
                  }
  - it: should generate a multibranch job with custom github configuration
    values:
      - fixtures/multibranch_customgithub.yaml
    asserts:
      - equal:
          path: data["jobs-definition.yaml"]
          value: |
            jobs:
              - script: |

                  multibranchPipelineJob('job-b') {
                    triggers {
                      periodicFolderTrigger {
                        interval('2h')
                      }
                    }

                    branchSources {
                      branchSource {
                        source {
                          github {
                            id('job-b')
                            credentialsId('the-force')
                            configuredByUrl(true)
                            repositoryUrl('https://github.com/obiwankenobi/lightsaber')
                            repoOwner('obiwankenobi')
                            repository('lightsaber')
                            traits {
                              gitHubNotificationContextTrait {
                                contextLabel('jenkins/localhost/job-b')
                                typeSuffix(true)
                              }
                              gitHubSCMSourceStatusChecksTrait {
                                // Note: changing this name might have impact on github branch protections if they specify status names
                                name('jenkins')
                                skip(true)
                                skipProgressUpdates(true)
                                // If this option is checked, the notifications sent by the GitHub Branch Source Plugin will be disabled.
                                skipNotifications(false)
                                // Default value: false. Warning: risk of secret leak in console if the build fails
                                // Please note that it only disable the detailed logs. If you really want no logs, then use "skip(false)' instead
                                suppressLogs(true)
                                unstableBuildNeutral(false)
                              }
                              gitHubBranchDiscovery {
                                strategyId(1) // 1-only branches that are not pull requests
                              }
                              gitHubPullRequestDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                              }
                              gitHubForkDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(2)
                                trust {
                                  gitHubTrustPermissions()
                                }
                              }
                              pruneStaleBranchTrait()
                              gitHubTagDiscovery()
                              pullRequestLabelsBlackListFilterTrait {
                                labels('on-hold,ci-skip,skip-ci')
                              }
                              // Select branches and tags to build based on these filters
                              headWildcardFilterWithPR {
                                includes('main master PR-*') // only branches listed here
                                excludes('')
                                tagIncludes('*')
                                tagExcludes('')
                              }
                            }
                          }
                          buildStrategies {
                            buildAnyBranches {
                              strategies {
                                skipInitialBuildOnFirstBranchIndexing()
                                buildChangeRequests {
                                  ignoreTargetOnlyChanges(true)
                                  ignoreUntrustedChanges(true)
                                }
                                buildRegularBranches()
                                buildTags {
                                  atLeastDays('-1')
                                  atMostDays('3')
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                    factory {
                      workflowBranchProjectFactory {
                        scriptPath('Jenkinsfile_k8s')
                      }
                    }
                    orphanedItemStrategy {
                      defaultOrphanedItemStrategy {
                        pruneDeadBranches(true)
                        daysToKeepStr("")
                        numToKeepStr("")
                        abortBuilds(true)
                      }
                    }
                    displayName('Job B')
                    description('Job B for team B')
                  }
  - it: should generate a multibranch job with advanced configuration
    values:
      - fixtures/multibranch_customadvanced.yaml
    asserts:
      - equal:
          path: data["jobs-definition.yaml"]
          value: |
            jobs:
              - script: |

                  multibranchPipelineJob('job-c') {
                    triggers {
                      periodicFolderTrigger {
                        interval('2h')
                      }
                    }

                    branchSources {
                      branchSource {
                        source {
                          github {
                            id('job-c')
                            credentialsId('github-app-infra')
                            configuredByUrl(true)
                            repositoryUrl('https://github.com/jenkins-infra/job-c')
                            repoOwner('jenkins-infra')
                            repository('job-c')
                            traits {
                              gitHubNotificationContextTrait {
                                contextLabel('jenkins/localhost/job-c')
                                typeSuffix(true)
                              }
                              gitHubSCMSourceStatusChecksTrait {
                                // Note: changing this name might have impact on github branch protections if they specify status names
                                name('untrusted-ci')
                                skip(false)
                                skipProgressUpdates(false)
                                // If this option is checked, the notifications sent by the GitHub Branch Source Plugin will be disabled.
                                skipNotifications(false)
                                // Default value: false. Warning: risk of secret leak in console if the build fails
                                // Please note that it only disable the detailed logs. If you really want no logs, then use "skip(false)' instead
                                suppressLogs(true)
                                unstableBuildNeutral(false)
                              }
                              gitHubBranchDiscovery {
                                strategyId(1) // 1-only branches that are not pull requests
                              }
                              gitHubPullRequestDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(1)
                              }
                              gitHubForkDiscovery {
                                // 1 - Merging the pull request with the current target branch revision
                                // 2 - The current pull request revision
                                strategyId(1)
                                trust {
                                  gitHubTrustPermissions()
                                }
                              }
                              pruneStaleBranchTrait()
                              pullRequestLabelsBlackListFilterTrait {
                                labels('on-hold,ci-skip,skip-ci')
                              }
                              // Select branches and tags to build based on these filters
                              headWildcardFilterWithPR {
                                includes('prod dev MR-*') // only branches listed here
                                excludes('excluded')
                                tagIncludes('*')
                                tagExcludes('')
                              }
                            }
                          }
                          buildStrategies {
                            buildAnyBranches {
                              strategies {
                                buildChangeRequests {
                                  ignoreTargetOnlyChanges(true)
                                  ignoreUntrustedChanges(false)
                                }
                                buildRegularBranches()
                              }
                            }
                          }
                        }
                      }
                    }
                    factory {
                      workflowBranchProjectFactory {
                        scriptPath('Jenkinsfile')
                      }
                    }
                    orphanedItemStrategy {
                      defaultOrphanedItemStrategy {
                        pruneDeadBranches(true)
                        daysToKeepStr("3")
                        numToKeepStr("10")
                        abortBuilds(true)
                      }
                    }
                    displayName('Job C')
                    description('Job C')
                  }
