suite: Tests with custom values
templates:
  - deployment.yaml
  - ingress.yaml
  - secret.yaml # Direct dependency of deployment.yaml
  - service.yaml
  - pdb.yaml
  - persistentVolume.yaml
  - persistentVolumeClaim.yaml
set:
  replicaCount: 2
  image:
    pullPolicy: Always
  geoipupdate:
    account_id: my-account-id
    license_key: my-license-key
  ingress:
    enabled: true
    hosts:
      - host: chart-example.local
        paths:
        - path: /
          pathType: IfNotPresent
  logs:
    volume:
      persistentVolumeClaim:
        claimName: foobar
  repository:
    name: mirrorbits-binary
    persistentVolumeClaim:
      enabled: true
      spec:
        accessModes:
          - ReadWriteMany
        storageClassName: azurefile-csi-premium
        resources:
          requests:
            storage: 1000Gi
        volumeName: mirrorbits-binary
    persistentVolume:
      enabled: true
      spec:
        capacity:
          storage: 1000Gi
        storageClassName: azurefile-csi-premium
        accessModes:
          - ReadWriteMany
        persistentVolumeReclaimPolicy: Retain
        csi:
          driver: file.csi.azure.com
          readOnly: false
          volumeHandle: mirrorbits-binary  # make sure this volumeid is unique for every identical share in the cluster
          volumeAttributes:
            resourceGroup: prod-core-releases
            shareName: mirrorbits
          nodeStageSecretRef:
            name: mirrorbits-binary
            namespace: mirrorbits
        mountOptions:
          - dir_mode=0755
tests:
  - it: Should set the correct service selector labels when a fullNameOverride is specified
    template: service.yaml
    set:
      fullNameOverride: "my-fullNameOverride"
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Service
      - equal:
          path: spec.selector["app.kubernetes.io/name"]
          value: "mirrorbits-lite"
      - equal:
          path: spec.selector["app.kubernetes.io/instance"]
          value: "RELEASE-NAME"
  - it: should define a customized "mirrorbits-lite" deployment
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.spec.containers[*].imagePullPolicy
          value: Always
      - equal:
          path: spec.replicas
          value: 2
      # Log volumes is a custom PVC
      - equal:
          path: spec.template.spec.volumes[2].name
          value: logs
      - equal:
          path: spec.template.spec.volumes[2].persistentVolumeClaim.claimName
          value: foobar
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].name
          value: logs
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[2].mountPath
          value: /var/log/mirrorbits
      # Data Volume
      - equal:
          path: spec.template.spec.volumes[3].name
          value: data
      - equal:
          path: spec.template.spec.volumes[3].persistentVolumeClaim.claimName
          value: mirrorbits-binary
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[3].name
          value: data
      - equal:
          path: spec.template.spec.containers[0].volumeMounts[3].mountPath
          value: /srv/repo
  - it: should create ingress with pathType set to the specified custom value by default
    template: ingress.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: spec.rules[0].http.paths[0].pathType
          value: "IfNotPresent"
  - it: should define a customized "mirrorbits-lite" persistent volume
    template: persistentVolume.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolume
  - it: should define a customized "mirrorbits-lite" PV claim
    template: persistentVolumeClaim.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PersistentVolumeClaim
  - it: create a default pdb when replicated
    template: pdb.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 1
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: mirrorbits-lite
  - it: create a customized pdb when custom values are set
    template: pdb.yaml
    set:
      poddisruptionbudget:
        minAvailable: 2
        maxUnavailable: 3
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: mirrorbits-lite
