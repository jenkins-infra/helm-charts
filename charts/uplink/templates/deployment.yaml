apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "uplink.fullname" . }}
  labels:
{{ include "uplink.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "uplink.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "uplink.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
    spec:
      automountServiceAccountToken: false
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: NODE_ENV
              value: 'production'
            - name: DB_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: {{ include "uplink.fullname" . }}
                  key: postgresql.url
            - name: CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "uplink.fullname" . }}
                  key: client.id
            - name: CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "uplink.fullname" . }}
                  key: client.secret
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: {{ include "uplink.fullname" . }}
                  key: sentry.dsn
          ports:
            - name: http
              containerPort: 3030
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 3030
          readinessProbe:
            httpGet:
              path: /
              port: 3030
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
