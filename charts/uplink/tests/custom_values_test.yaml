suite: test secret.yaml
templates:
  - secret.yaml
  - pdb.yaml
  - deployment
values:
  - values/custom.yaml
tests:
  - it: should ensure the secret is created with custom credentials
    template: secret.yaml
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: metadata.name
          value: RELEASE-NAME-uplink
      - equal:
          path: data['postgresql.url']
          value: "ZXhhbXBsZS11cmw="  # Base64 encoded value of "example-url"
      - equal:
          path: data['client.id']
          value: "ZXhhbXBsZS1pZA=="  # Base64 encoded value of "example-id"
      - equal:
          path: data['client.secret']
          value: "ZXhhbXBsZS1zZWNyZXQ="  # Base64 encoded value of "example-secret"
      - equal:
          path: data['sentry.dsn']
          value: "ZXhhbXBsZS1kc24="  # Base64 encoded value of "example-dsn"
  - it: should create a PDB with defaults when multiple replicas are set
    template: pdb.yaml
    set:
      replicaCount: 2
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 1
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "uplink"
  - it: should ensure the pdb has correct spec
    template: pdb.yaml
    set:
      replicaCount: 2
      poddisruptionbudget.minAvailable: 2
      poddisruptionbudget.maxUnavailable: 3
    asserts:
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: spec.minAvailable
          value: 2
      - equal:
          path: spec.maxUnavailable
          value: 3
      - equal:
          path: spec.selector.matchLabels['app.kubernetes.io/name']
          value: "uplink"
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: uplink
  - it: should generate a deployment with the custom values
    template: deployment.yaml
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Deployment
      - equal:
          path: spec.template.metadata.annotations["ad.datadoghq.com/uplink.logs"]
          value: |
            [
              {"source":"nodejs","service":"RELEASE-NAME"}
            ]
