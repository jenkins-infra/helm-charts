replicaCount: 2
image:
  pullPolicy: Always
ingress:
  enabled: true
  hosts:
    - host: chart-example.local
      paths:
      - path: /
        pathType: IfNotPresent
  additionalIngresses:
    - className: bar
      annotations:
        "nginx.ingress.kubernetes.io/rewrite-target": "/$1$2/index.html"
      hosts:
        - host: company.org
          paths:
            - path: /(.*)(/|$)
              pathType: ImplementationSpecific
      tls:
        - secretName: ubersecret
          hosts:
            - company.org
service:
  type: LoadBalancer
  port: 443
config:
  repository: /DATA
  templates: /custom-tpls
  geoipDatabase: /geo-data
  gzip: false
  port: 7777
  traceFile: /TIME
  repositoryScanInterval: 10
  scanInterval: 8
  concurentSync: 9
  checkInterval: 60
  disallowRedirects: false
  disableOnMissingFile: false
  outputMode: redirect
  redis:
    address: redis-master.internal.company.org:6379
    password: SuperSecretRedisPassword
    dbId: 4
    sentinelMasterName: mySentinelMaster
    sentinels:
      - 1.2.3.4:26379
      - 4.3.2.1:26379
  logs:
    path: /custom
    volume:
      persistentVolumeClaim:
        claimName: foobar
  fallbacks:
    - url: https://fallback.company.org
      countryCode: DE
      continentCode: EU
cli:
  enabled: true
  port: 3333
  password: "SuperSecretPasswordForCli"
  service:
    type: NodePort
    annotations:
      beta.kubernetes.io/foo: bar
  ingress:
    enabled: true
    className: customClass
    annotations:
      beta.kubernetes.io/yipi: kai
    hosts:
      - external.localhost
      - internal.localhost
    tls:
      - hosts:
          - external.localhost
        secretName: external-tls
      - hosts:
          - internal.localhost
          - private.localhost
        secretName: internal-tls
repository:
  name: mirrorbits-binary
  subDir: ./content/
  persistentVolumeClaim:
    enabled: true
    spec:
      accessModes:
        - ReadWriteMany
      storageClassName: azurefile-csi-premium
      resources:
        requests:
          storage: 1000Gi
      volumeName: mirrorbits-binary
  persistentVolume:
    enabled: true
    spec:
      capacity:
        storage: 1000G
      storageClassName: azurefile-csi-premium
      accessModes:
        - ReadWriteMany
      persistentVolumeReclaimPolicy: Retain
      csi:
        driver: file.csi.azure.com
        readOnly: false
        volumeHandle: mirrorbits-binary  # make sure this volumeid is unique for every identical share in the cluster
        volumeAttributes:
          resourceGroup: prod-core-releases
          shareName: mirrorbits
        nodeStageSecretRef:
          name: mirrorbits-binary
          namespace: mirrorbits
      mountOptions:
        - dir_mode=0755
  secrets:
    enabled: true
    data:
      azurestorageaccountkey: 'SuperSecretKey!'
      azurestorageaccountname: storage-account-in-az
geoipdata:
  persistentData:
    enabled: true
    capacity: 2Gi
    storageClassName: stc
    csi:
      driver: disk.csi.azure.com
      fsType: ext4
podSecurityContext:
  runAsUser: 1000
containerSecurityContext:
  readOnlyRootFilesystem: true
resources:
  limits:
    cpu: 500m
annotations:
  ad.datadoghq.com/mirrorbits.logs: |
    [
      {"type":"file","path":"/custom/downloads.log","source":"file","service":"RELEASE-NAME"},
      {"source":"container","service":"RELEASE-NAME"}
    ]
